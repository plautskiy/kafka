version: '3.2'

services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - back-tier

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      #KAFKA_ADVERTISED_PORT: 9095
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.100
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #KAFKA_ADVERTISED_LISTENERS: INSIDE://system-z18:9093,OUTSIDE://localhost:9092
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      #KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      #KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - back-tier
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      #- ${KAFKA_DATA}/brokers/222:/kafka

  kafka-producer:
    container_name: kafka-producer
    image: plautskiy/kafka-producer
    build:
      context: producer
      dockerfile: src/main/docker/Dockerfile
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    networks:
      - back-tier

  kafka-consumer:
    container_name: kafka-consumer
    image: plautskiy/kafka-consumer
    build:
      context: consumer
      dockerfile: src/main/docker/Dockerfile
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    networks:
      - back-tier

networks:
  back-tier:
    driver: bridge